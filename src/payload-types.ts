/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    cars: Car;
    manufacturers: Manufacturer;
    pages: Page;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    manufacturers: {
      cars: 'cars';
    };
  };
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    cars: CarsSelect<false> | CarsSelect<true>;
    manufacturers: ManufacturersSelect<false> | ManufacturersSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    banner?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cars".
 */
export interface Car {
  id: number;
  title?: string | null;
  featuredImage?: (number | null) | Media;
  manufacturer?: (number | null) | Manufacturer;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "manufacturers".
 */
export interface Manufacturer {
  id: number;
  title?: string | null;
  logo?: (number | null) | Media;
  cars?: {
    docs?: (number | Car)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Standard pages use dynamic routing, custom layouts have dedicated code
   */
  pageType: 'standard' | 'about' | 'digitalContent';
  /**
   * Only used for standard slug-based pages
   */
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Blocks for About page layout
   */
  aboutBlocks?:
    | (
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            subheading?: string | null;
            backgroundImage?: (number | null) | Media;
            ctaText?: string | null;
            ctaLink?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'hero';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading?: string | null;
            content?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'contentSection';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            features?:
              | {
                  title?: string | null;
                  description?: string | null;
                  icon?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'featuresGrid';
          }
      )[]
    | null;
  /**
   * Blocks for Digital Content page layout
   */
  digitalContentBlocks?:
    | (
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            bannerText: string;
            bannerDescription: string;
            ctaText?: string | null;
            ctaLink?: string | null;
            backgroundType: 'image' | 'youtube';
            backgroundImage?: (number | null) | Media;
            /**
             * Enter the YouTube video ID (e.g., ty2Uq2ip340 from https://www.youtube.com/watch?v=ty2Uq2ip340)
             */
            youtubeVideoId?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'digitalContentHero';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            areas?:
              | {
                  title: string;
                  description: string;
                  icon?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'focusArea';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            description: string;
            image?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'globalChampion';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            description: string;
            stats?:
              | {
                  label: string;
                  value: string;
                  icon?: (number | null) | Media;
                  /**
                   * Enter hex color code (e.g., #f3f4f6)
                   */
                  backgroundColor?: string | null;
                  textColor?: ('black' | 'white') | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'nationalImpact';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            description?: string | null;
            companies?:
              | {
                  label: string;
                  count: number;
                  icon?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'industrySize';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            cards?:
              | {
                  title: string;
                  description: string;
                  url: string;
                  image?: (number | null) | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ourHighlights';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            items?:
              | {
                  title: string;
                  description: string;
                  image: number | Media;
                  url: string;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'programmesInitiatives';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            downloadLabel?: string | null;
            items?:
              | {
                  title: string;
                  image: number | Media;
                  /**
                   * Hex color code (e.g., #DDDAE4)
                   */
                  backgroundColor?: string | null;
                  pdfFile: number | Media;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'ourPublications';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            title: string;
            description: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            };
            ctaText: string;
            ctaLink: string;
            backgroundImage?: (number | null) | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'getInTouch';
          }
        | {
            /**
             * If checked, this block will be hidden from the frontend display.
             */
            hideBlock?: boolean | null;
            heading: string;
            questions?:
              | {
                  question: string;
                  answer: {
                    root: {
                      type: string;
                      children: {
                        type: any;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'faq';
          }
      )[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'cars';
        value: number | Car;
      } | null)
    | ({
        relationTo: 'manufacturers';
        value: number | Manufacturer;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        banner?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cars_select".
 */
export interface CarsSelect<T extends boolean = true> {
  title?: T;
  featuredImage?: T;
  manufacturer?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "manufacturers_select".
 */
export interface ManufacturersSelect<T extends boolean = true> {
  title?: T;
  logo?: T;
  cars?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pageType?: T;
  content?: T;
  aboutBlocks?:
    | T
    | {
        hero?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              subheading?: T;
              backgroundImage?: T;
              ctaText?: T;
              ctaLink?: T;
              id?: T;
              blockName?: T;
            };
        contentSection?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              content?: T;
              id?: T;
              blockName?: T;
            };
        featuresGrid?:
          | T
          | {
              hideBlock?: T;
              features?:
                | T
                | {
                    title?: T;
                    description?: T;
                    icon?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  digitalContentBlocks?:
    | T
    | {
        digitalContentHero?:
          | T
          | {
              hideBlock?: T;
              bannerText?: T;
              bannerDescription?: T;
              ctaText?: T;
              ctaLink?: T;
              backgroundType?: T;
              backgroundImage?: T;
              youtubeVideoId?: T;
              id?: T;
              blockName?: T;
            };
        focusArea?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              areas?:
                | T
                | {
                    title?: T;
                    description?: T;
                    icon?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        globalChampion?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              description?: T;
              image?: T;
              id?: T;
              blockName?: T;
            };
        nationalImpact?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              description?: T;
              stats?:
                | T
                | {
                    label?: T;
                    value?: T;
                    icon?: T;
                    backgroundColor?: T;
                    textColor?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        industrySize?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              description?: T;
              companies?:
                | T
                | {
                    label?: T;
                    count?: T;
                    icon?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        ourHighlights?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              cards?:
                | T
                | {
                    title?: T;
                    description?: T;
                    url?: T;
                    image?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        programmesInitiatives?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              items?:
                | T
                | {
                    title?: T;
                    description?: T;
                    image?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        ourPublications?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              downloadLabel?: T;
              items?:
                | T
                | {
                    title?: T;
                    image?: T;
                    backgroundColor?: T;
                    pdfFile?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        getInTouch?:
          | T
          | {
              hideBlock?: T;
              title?: T;
              description?: T;
              ctaText?: T;
              ctaLink?: T;
              backgroundImage?: T;
              id?: T;
              blockName?: T;
            };
        faq?:
          | T
          | {
              hideBlock?: T;
              heading?: T;
              questions?:
                | T
                | {
                    question?: T;
                    answer?: T;
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo: number | Media;
  navigation?:
    | {
        label: string;
        /**
         * Enter relative path (e.g., /about) or full URL
         */
        url: string;
        openInNewTab?: boolean | null;
        id?: string | null;
      }[]
    | null;
  ctaButton?: {
    text?: string | null;
    url?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Hex color code for footer background (e.g., #1f2937)
   */
  backgroundColor?: string | null;
  /**
   * Hex color code for all text in footer (e.g., #9ca3af)
   */
  textColor?: string | null;
  /**
   * Hex color code for social media icons (e.g., #9ca3af)
   */
  iconColor?: string | null;
  logo?: (number | null) | Media;
  description?: string | null;
  /**
   * Optional image to display between left and right sections
   */
  centerImage?: (number | null) | Media;
  columns?:
    | {
        heading: string;
        links?:
          | {
              label: string;
              url: string;
              openInNewTab?: boolean | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  socialLinks?:
    | {
        platform: 'facebook' | 'twitter' | 'linkedin' | 'instagram' | 'youtube';
        url: string;
        /**
         * Upload a custom icon for this social link (overrides default icon).
         */
        icon?: (number | null) | Media;
        id?: string | null;
      }[]
    | null;
  copyrightText?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?: T;
  navigation?:
    | T
    | {
        label?: T;
        url?: T;
        openInNewTab?: T;
        id?: T;
      };
  ctaButton?:
    | T
    | {
        text?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  backgroundColor?: T;
  textColor?: T;
  iconColor?: T;
  logo?: T;
  description?: T;
  centerImage?: T;
  columns?:
    | T
    | {
        heading?: T;
        links?:
          | T
          | {
              label?: T;
              url?: T;
              openInNewTab?: T;
              id?: T;
            };
        id?: T;
      };
  socialLinks?:
    | T
    | {
        platform?: T;
        url?: T;
        icon?: T;
        id?: T;
      };
  copyrightText?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}